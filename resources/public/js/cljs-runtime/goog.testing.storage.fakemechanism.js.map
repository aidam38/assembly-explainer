{
"version":3,
"file":"goog.testing.storage.fakemechanism.js",
"lineCount":21,
"mappings":"AAUAA,IAAKC,CAAAA,OAAL,CAAa,oCAAb,CAAA;AACAD,IAAKE,CAAAA,WAAL,CAAiB,oCAAjB,CAAA;AAEAF,IAAKG,CAAAA,OAAL,CAAa,0CAAb,CAAA;AACAH,IAAKG,CAAAA,OAAL,CAAa,kBAAb,CAAA;AAWAH,IAAKI,CAAAA,OAAQC,CAAAA,OAAQC,CAAAA,aAArB,GAAqCC,QAAQ,EAAG;AAM9C,MAAKC,CAAAA,QAAL,GAAgB,IAAIR,IAAKS,CAAAA,OAAQC,CAAAA,GAAjC;AAN8C,CAAhD;AAQAV,IAAKW,CAAAA,QAAL,CACIX,IAAKI,CAAAA,OAAQC,CAAAA,OAAQC,CAAAA,aADzB,EAEIN,IAAKK,CAAAA,OAAQO,CAAAA,SAAUC,CAAAA,iBAF3B,CAAA;AAMAb,IAAKI,CAAAA,OAAQC,CAAAA,OAAQC,CAAAA,aAAcQ,CAAAA,SAAUC,CAAAA,GAA7C,GAAmDC,QAAQ,CAACC,GAAD,EAAMC,KAAN,CAAa;AAEtE,MAAKV,CAAAA,QAASO,CAAAA,GAAd,CAAkBE,GAAlB,EAAuBC,KAAvB,CAAA;AAFsE,CAAxE;AAOAlB,IAAKI,CAAAA,OAAQC,CAAAA,OAAQC,CAAAA,aAAcQ,CAAAA,SAAUK,CAAAA,GAA7C,GAAmDC,QAAQ,CAACH,GAAD,CAAM;AAE/D,SACI,IAAKT,CAAAA,QAASW,CAAAA,GAAd,CAAkBF,GAAlB,EAAuB,IAAvB,CADJ;AAF+D,CAAjE;AAQAjB,IAAKI,CAAAA,OAAQC,CAAAA,OAAQC,CAAAA,aAAcQ,CAAAA,SAAUO,CAAAA,MAA7C,GAAsDC,QAAQ,CAACL,GAAD,CAAM;AAElE,MAAKT,CAAAA,QAASa,CAAAA,MAAd,CAAqBJ,GAArB,CAAA;AAFkE,CAApE;AAOAjB,IAAKI,CAAAA,OAAQC,CAAAA,OAAQC,CAAAA,aAAcQ,CAAAA,SAAUS,CAAAA,YAA7C,GAA4DC,QAAQ,CAACC,QAAD,CAAW;AAE7E,SAAO,IAAKjB,CAAAA,QAASe,CAAAA,YAAd,CAA2BE,QAA3B,CAAP;AAF6E,CAA/E;;",
"sources":["goog/testing/storage/fakemechanism.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Provides a fake storage mechanism for testing.\n */\n\ngoog.provide('goog.testing.storage.FakeMechanism');\ngoog.setTestOnly('goog.testing.storage.FakeMechanism');\n\ngoog.require('goog.storage.mechanism.IterableMechanism');\ngoog.require('goog.structs.Map');\n\n\n\n/**\n * Creates a fake iterable mechanism.\n *\n * @constructor\n * @extends {goog.storage.mechanism.IterableMechanism}\n * @final\n */\ngoog.testing.storage.FakeMechanism = function() {\n  'use strict';\n  /**\n   * @type {goog.structs.Map}\n   * @private\n   */\n  this.storage_ = new goog.structs.Map();\n};\ngoog.inherits(\n    goog.testing.storage.FakeMechanism,\n    goog.storage.mechanism.IterableMechanism);\n\n\n/** @override */\ngoog.testing.storage.FakeMechanism.prototype.set = function(key, value) {\n  'use strict';\n  this.storage_.set(key, value);\n};\n\n\n/** @override */\ngoog.testing.storage.FakeMechanism.prototype.get = function(key) {\n  'use strict';\n  return /** @type {?string} */ (\n      this.storage_.get(key, null /* default value */));\n};\n\n\n/** @override */\ngoog.testing.storage.FakeMechanism.prototype.remove = function(key) {\n  'use strict';\n  this.storage_.remove(key);\n};\n\n\n/** @override */\ngoog.testing.storage.FakeMechanism.prototype.__iterator__ = function(opt_keys) {\n  'use strict';\n  return this.storage_.__iterator__(opt_keys);\n};\n"],
"names":["goog","provide","setTestOnly","require","testing","storage","FakeMechanism","goog.testing.storage.FakeMechanism","storage_","structs","Map","inherits","mechanism","IterableMechanism","prototype","set","goog.testing.storage.FakeMechanism.prototype.set","key","value","get","goog.testing.storage.FakeMechanism.prototype.get","remove","goog.testing.storage.FakeMechanism.prototype.remove","__iterator__","goog.testing.storage.FakeMechanism.prototype.__iterator__","opt_keys"]
}
